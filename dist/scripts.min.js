let PokemonRepository = (function () {
  let e = [],
    t = "https://pokeapi.co/api/v2/pokemon/?limit=150";
  function n(e) {
    let t = document.querySelector(".list-group"),
      n = document.createElement("li"),
      i = document.createElement("button");
    (i.innerText = e.name),
      i.classList.add("btn-primary"),
      n.classList.add("li"),
      o(i, e),
      n.appendChild(i),
      t.appendChild(n);
  }
  function o(e, t) {
    e.addEventListener("click", function () {
      i(t);
    });
  }
  function i(e) {
    PokemonRepository.loadDetails(e).then(function () {
      console.log(e), l(e);
    });
  }
  function l(e) {
    let t = $(".modal-body"),
      n = $(".modal-title");
    n.empty(), t.empty();
    let o = $("<h1>" + e.name + "</h1>"),
      i = $('<img class="pokemon-modal-img" style="width:100%">');
    i.attr("src", e.imageUrl);
    let l = $("<p>Height : " + e.height + "</p>"),
      a = $("<p>Weight : " + e.weight + "</p>"),
      s = $("<p>Types : " + e.types + "</p>"),
      p = $("<p>Abilities : " + e.abilities + "</p>");
    n.append(o),
      t.append(i),
      t.append(l),
      t.append(a),
      t.append(s),
      t.append(p);
  }
  function a(t) {
    "object" == typeof t && "name" in t
      ? e.push(t)
      : console.log("pokemon is not correct");
  }
  function s(e) {
    return e.charAt(0).toUpperCase() + e.slice(1);
  }
  return {
    add: a,
    getAll: function () {
      return e;
    },
    addListItem: n,
    loadList: function () {
      return fetch(t)
        .then(function (e) {
          return e.json();
        })
        .then(function (e) {
          e.results.forEach(function (e) {
            let t = { name: e.name, detailsUrl: e.url };
            a(t), console.log(t);
          });
        })
        .catch(function (e) {
          console.error(e);
        });
    },
    loadDetails: function (e) {
      let t = e.detailsUrl;
      return fetch(t)
        .then(function (e) {
          return e.json();
        })
        .then(function (t) {
          (e.imageUrl = t.sprites.front_default),
            (e.height = t.height),
            (e.types = []);
          for (let n = 0; n < t.types.length; n++)
            e.types.push(t.types[n].type.name);
          (e.weight = t.weight), (e.abilities = []);
          for (let n = 0; n < t.abilities.length; n++)
            e.abilities.push(t.abilities[n].ability.name);
        })
        .catch(function (e) {
          console.error(e);
        });
    },
    showDetails: i,
    showModal: l,
    ifPokemonSelected: o,
    findPokemon: function (t) {
      $(".list-group").empty(),
        e.forEach((e) => {
          s(e.name).indexOf(s(t)) > -1 && n(e);
        });
    },
  };
})();
PokemonRepository.loadList().then(function () {
  PokemonRepository.getAll().forEach(function (e) {
    PokemonRepository.addListItem(e);
  });
});
